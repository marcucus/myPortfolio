'use client';

import { useState } from 'react';
import { FaGithub, FaExternalLinkAlt, FaTimes } from 'react-icons/fa';
import Image from 'next/image';

interface Project {
  title: string;
  description: string;
  longDescription: string;
  tech: string[];
  period: string;
  achievements: string[];
  image?: string;
  skills?: string[];
  organization?: string;
  githubUrl?: string;
  demoUrl?: string;
}

export default function Projects() {
  const [flippedCard, setFlippedCard] = useState<number | null>(null);
  const [selectedImage, setSelectedImage] = useState<string | null>(null);

  const projects: Project[] = [
    {
      title: "GoldWen - Application de rencontre",
      description: "Application mobile de rencontre nouvelle g√©n√©ration valorisant la qualit√© des interactions",
      longDescription: "Une application mobile de rencontre nouvelle g√©n√©ration qui valorise la qualit√© des interactions plut√¥t que la quantit√©. Con√ßue pour transformer la fa√ßon dont on cr√©e des liens, cette application met la compatibilit√© au c≈ìur de l'exp√©rience utilisateur.",
      tech: ["Flutter", "TypeScript", "NestJS", "Python", "PostgreSQL"],
      period: "D√©c 2024 - Aujourd'hui",
      achievements: [
        "Questionnaire de personnalit√© personnalis√© √† l'inscription",
        "Une connexion par jour soigneusement s√©lectionn√©e",
        "Discussions authentiques pour explorer des v√©ritables connexions",
        "Algorithme de compatibilit√© bas√© sur les valeurs et la personnalit√©",
      ],
      organization: "GoldWen",
      image: "/projects/goldwen.png",
      skills: ["Gestion de projet", "Design d'interface utilisateur", "Application mobile", "Flutter", "NestJS", "Python", "PostgreSQL"],
      githubUrl: "private",
      demoUrl: "https://goldwen.app",
    },
    {
      title: "Bones - Marketplace",
      description: "D√©veloppement d'une application web reli√©e au jeu Bones",
      longDescription: "D√©veloppement d'une application web reli√©e au jeu Bones. Marketplace compl√®te avec gestion des utilisateurs, produits et transactions.",
      tech: ["JavaScript", "Next.js", "Tailwind CSS", "TypeScript", "Firebase", "React.js"],
      period: "F√©v 2024 - Juil 2024",
      achievements: [
        "Cr√©ation de composants r√©utilisables",
        "Cr√©ation de nouvelles pages et features",
        "Suppression de bugs existants",
        "Optimisation de code et responsive design",
      ],
      organization: "Ennea",
      image: "/projects/bonesmarketplace.png",
      skills: ["JavaScript", "Next.js", "Tailwind CSS", "R√©alisation de tests", "D√©veloppement front-end", "Sens de l'organisation", "D√©veloppement full-stack", "Travail d'√©quipe", "TypeScript", "D√©veloppement web back-end", "Firebase", "Scrum", "React.js"],
      githubUrl: "private",
      demoUrl: "https://playbones.xyz",
    },
    {
      title: "LCF AUTO PERFORMANCE",
      description: "Site web d'un garagiste permettant la prise de rendez-vous et la visualisation des actualit√©s",
      longDescription: "Cr√©ation d'un site web d'un garagiste permettant la prise de rendez-vous et la visualisation des actualit√©s du garage (ventes de v√©hicules, devis etc...)",
      tech: ["Next.js", "Tailwind CSS", "React.js"],
      period: "Juin 2024",
      achievements: [
        "Syst√®me de prise de rendez-vous int√©gr√©",
        "Gestion des actualit√©s du garage",
        "Visualisation des ventes de v√©hicules",
        "Interface responsive et moderne",
      ],
      organization: "LCF AUTO PERFORMANCE",
      image: "/projects/lcf.png",
      skills: ["Next.js", "Communication", "Tailwind CSS", "R√©alisation de tests", "D√©veloppement front-end", "Sens de l'organisation", "M√©thodes agiles", "D√©veloppement full-stack", "D√©veloppement web back-end", "React.js"],
      githubUrl: "private",
      demoUrl: "https://lcfauto-performance.vercel.app/",
    },
    {
      title: "Forestria",
      description: "Plateforme pr√©sentant les randonn√©es dans la ville de Limoges",
      longDescription: "Cr√©ation d'un site internet pr√©sentant les randonn√©es dans la ville de Limoges.",
      tech: ["Symfony", "Twig", "MySQL"],
      period: "Mai 2024",
      achievements: [
        "Design moderne et responsive",
        "Pr√©sentation claire des sentiers",
        "Mise en valeur de la biodiversit√© locale",
      ],
      image: "/projects/forestria.png",
      organization: "Moi",
      skills: ["Symfony", "Twig", "D√©veloppement front-end", "Sens de l'organisation", "D√©veloppement full-stack", "Design d'interface utilisateur", "D√©veloppement web back-end", "Gestion de projet", "Gestion d'√©quipe"],
      githubUrl: "https://github.com/marcucus/forestria",
    },
    {
      title: "Dijoma - Site vitrine",
      description: "Site vitrine pour une entreprise de r√©paration automobile",
      longDescription: "Cr√©ation d'un site vitrine pour une entreprise de r√©paration automobile avec pr√©sentation des services et informations de contact.",
      tech: ["React.js", "Tailwind CSS"],
      period: "Juin 2023",
      achievements: [
        "Design moderne et professionnel",
        "Pr√©sentation claire des services",
        "Interface responsive",
        "Optimisation SEO",
      ],
      image: "/projects/dijoma.png",
      organization: "Dijoma",
      skills: ["Tailwind CSS", "R√©alisation de tests", "Sens de l'organisation", "M√©thodes agiles", "Design d'interface utilisateur", "React.js"],
      githubUrl: "https://github.com/marcucus/dijotest",
      demoUrl: "https://tourmaline-cucurucho-f2dac4.netlify.app/",
    },
    {
      title: "Foudroyer Ranking",
      description: "Service de suivi de mots-cl√©s et positionnement sur les moteurs de recherche",
      longDescription: "Service permettant de suivre ses mots-cl√©s et les √©volutions en calculant leur positionnement sur les moteurs de recherches (Google, Yandex, Bing).",
      tech: ["ReactJS", "NestJS", "PostgreSQL", "AWS", "Node.js", "TypeScript"],
      period: "Mars 2022 - Juil 2022",
      achievements: [
        "Suivi multi-moteurs (Google, Yandex, Bing)",
        "Calcul de positionnement en temps r√©el",
        "Tableaux de bord analytiques",
        "API REST performante",
      ],
      organization: "Foudroyer",
      image: "/projects/ranking.png",
      skills: ["JavaScript", "Tailwind CSS", "D√©veloppement front-end", "Sens de l'organisation", "D√©veloppement full-stack", "Travail d'√©quipe", "TypeScript", "D√©veloppement web back-end", "Scrum", "React.js", "Node.js", "SQL", "PostgreSQL"],
      githubUrl: "private",
      demoUrl: "https://www.foudroyer.com/",
    },
  ];

  return (
    <section id="projects" className="min-h-screen py-20 px-4 relative">
      {/* Background effects */}
      <div className="absolute top-40 left-20 w-64 h-64 bg-cyan-500/10 rounded-full blur-3xl" />
      <div className="absolute bottom-40 right-20 w-80 h-80 bg-purple-500/10 rounded-full blur-3xl" />

      <div className="max-w-6xl mx-auto relative">
        <h2 className="text-4xl md:text-5xl font-bold mb-4 text-center bg-linear-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent">
          Projets R√©alis√©s
        </h2>
        <p className="text-center text-white/60 mb-12">
          Cliquez sur une carte pour d√©couvrir plus de d√©tails
        </p>

        {/* Image Modal */}
        {selectedImage && (
          <div
            className="fixed inset-0 z-50 flex items-center justify-center bg-black/80 backdrop-blur-sm p-4"
            onClick={() => setSelectedImage(null)}
          >
            <div className="relative max-w-5xl w-full">
              <button
                className="absolute -top-12 right-0 text-white/80 hover:text-white text-3xl cursor-pointer"
                onClick={() => setSelectedImage(null)}
              >
                <FaTimes />
              </button>
              <div className="relative w-full h-[80vh]" onClick={(e) => e.stopPropagation()}>
                <Image
                  src={selectedImage}
                  alt="Project screenshot"
                  fill
                  sizes="100vw"
                  className="object-contain select-none pointer-events-none"
                />
              </div>
            </div>
          </div>
        )}

        {/* 3D Flip Cards Grid */}
        <div className="grid md:grid-cols-2 gap-8">
          {projects.map((project, index) => (
            <div
              key={index}
              className="relative h-[450px] cursor-pointer group perspective-1000"
              onClick={() => setFlippedCard(flippedCard === index ? null : index)}
            >
              <div
                className={`relative w-full h-full transition-all duration-700 transform-style-3d ${
                  flippedCard === index ? 'rotate-y-180' : ''
                }`}
                style={{
                  transformStyle: 'preserve-3d',
                  transform: flippedCard === index ? 'rotateY(180deg)' : 'rotateY(0)',
                }}
              >
                {/* Front of card */}
                <div
                  className="absolute inset-0 glass-effect-strong rounded-4xl p-6 backface-hidden overflow-hidden"
                  style={{ backfaceVisibility: 'hidden' }}
                >
                  {/* Gradient overlay */}
                  <div className="absolute inset-0 bg-linear-to-br from-purple-500/20 via-blue-500/20 to-cyan-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500" />
                  
                    <div className="relative z-10 h-full flex flex-col">
                      <div className='flex items-center content-center justify-between'>
                        <div className="mb-4">
                          <div className="w-16 h-16 rounded-full bg-linear-to-br from-purple-500 to-blue-500 flex items-center justify-center text-3xl">
                            üíº
                          </div>
                        </div>

                        {/* Project Image or Icon */}
                        {project.image && (
                          <div 
                            className="mb-4 relative w-32 h-16 rounded-lg overflow-hidden cursor-pointer select-none"
                            onClick={(e) => {
                              e.stopPropagation();
                              setSelectedImage(project.image!);
                            }}
                            style={{
                              userSelect: 'none',
                              WebkitUserSelect: 'none',
                              MozUserSelect: 'none',
                              msUserSelect: 'none',
                            }}
                          >
                            <Image
                              src={project.image}
                              alt={project.title}
                              fill
                              sizes="(max-width: 768px) 100vw, 50vw"
                              className="object-cover hover:scale-105 transition-transform duration-300 select-none pointer-events-none"
                              draggable={false}
                              style={{
                                userSelect: 'none',
                                WebkitUserSelect: 'none',
                                MozUserSelect: 'none',
                                msUserSelect: 'none',
                              }}
                            />
                          </div>
                        )}
                      </div>


                    <h3 className="text-2xl font-bold mb-3 text-white">{project.title}</h3>
                    {project.organization && (
                      <p className="text-sm text-cyan-400 mb-2">Associ√© √† {project.organization}</p>
                    )}
                    <p className="text-white/70 mb-4 grow">{project.description}</p>
                    <p className="text-sm text-purple-400 mb-4">{project.period}</p>

                    {/* Tech Stack Pills */}
                    <div className="flex flex-wrap gap-2 mb-4">
                      {project.tech.slice(0, 4).map((tech, i) => (
                        <span
                          key={i}
                          className="px-3 py-1 rounded-full glass-effect text-xs text-white/80"
                        >
                          {tech}
                        </span>
                      ))}
                      {project.tech.length > 4 && (
                        <span className="px-3 py-1 rounded-full glass-effect text-xs text-white/80">
                          +{project.tech.length - 4}
                        </span>
                      )}
                    </div>


                    {/* Action Buttons */}
                    {(project.githubUrl || project.demoUrl) && (
                      <div className="flex gap-3 mb-4 pt-4 border-t border-white/10">
                        {project.githubUrl !== "private" && (
                          <a
                            href={project.githubUrl}
                            target="_blank"
                            rel="noopener noreferrer"
                            onClick={(e) => e.stopPropagation()}
                            className="relative flex-1 flex items-center justify-center gap-2 px-4 py-2 rounded-full glass-effect transition-all duration-300 text-white/80 hover:text-white text-sm hover:scale-105 hover:shadow-lg hover:shadow-purple-500/50 group/btn overflow-hidden"
                          >
                            <div className="absolute inset-0 bg-linear-to-r from-purple-500/0 via-purple-500/20 to-purple-500/0 opacity-0 group-hover/btn:opacity-100 transition-opacity duration-300" />
                            <FaGithub className="text-lg relative z-10 group-hover/btn:scale-110 transition-transform duration-300" />
                            <span className="relative z-10">GitHub</span>
                          </a>
                        )}
                        {project.demoUrl && (
                          <a
                            href={project.demoUrl}
                            target="_blank"
                            rel="noopener noreferrer"
                            onClick={(e) => e.stopPropagation()}
                            className="relative flex-1 flex items-center justify-center gap-2 px-4 py-2 rounded-full glass-effect transition-all duration-300 text-white/80 hover:text-white text-sm hover:scale-105 hover:shadow-lg hover:shadow-cyan-500/50 group/btn overflow-hidden"
                          >
                            <div className="absolute inset-0 bg-linear-to-r from-cyan-500/0 via-cyan-500/20 to-cyan-500/0 opacity-0 group-hover/btn:opacity-100 transition-opacity duration-300" />
                            <FaExternalLinkAlt className="text-sm relative z-10 group-hover/btn:scale-110 transition-transform duration-300" />
                            <span className="relative z-10">Demo</span>
                          </a>
                        )}
                      </div>
                    )}

                    <div className="flex items-center justify-center content-center text-white/60 text-sm mt-auto">
                      <span>Cliquez pour plus de d√©tails</span>
                      <span className="ml-2">‚Üí</span>
                    </div>
                  </div>
                </div>

                {/* Back of card */}
                <div
                  className="absolute inset-0 glass-effect-strong rounded-4xl p-6 backface-hidden overflow-y-auto"
                  style={{
                    backfaceVisibility: 'hidden',
                    transform: 'rotateY(180deg)',
                  }}
                >
                  <div className="h-full flex flex-col">
                    <p className="text-white/80 mb-4">{project.longDescription}</p>

                    <div className="grow">
                      <h4 className="text-lg font-semibold mb-2 text-purple-400">R√©alisations:</h4>
                      <ul className="space-y-2">
                        {project.achievements.map((achievement, i) => (
                          <li key={i} className="flex items-center content-center gap-2 text-white/70">
                            <span className="text-cyan-400 mt-1">‚úì</span>
                            <span className="text-sm">{achievement}</span>
                          </li>
                        ))}
                      </ul>
                    </div>

                    <div className="flex items-center justify-center text-white/60 text-sm mt-4">
                      <span>Cliquez pour retourner</span>
                      <span className="ml-2">‚Üê</span>
                    </div>
                  </div>
                </div>
              </div>

              {/* 3D Shadow effect */}
              <div className="absolute inset-0 -z-10 bg-linear-to-br from-purple-500/20 to-blue-500/20 rounded-4xl blur-2xl transform translate-y-4 group-hover:translate-y-6 transition-transform duration-500" />
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}
